version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dibea-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dibea}
      POSTGRES_USER: ${POSTGRES_USER:-dibea}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dibea123}
    ports:
      - "5434:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    networks:
      - dibea-dev-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-dibea} -d ${POSTGRES_DB:-dibea}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: dibea-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - dibea-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    container_name: dibea-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-dibea}:${POSTGRES_PASSWORD:-dibea123}@postgres:5432/${POSTGRES_DB:-dibea}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-key}
      PORT: 3000
      CORS_ORIGIN: http://localhost:3001
      SKIP_MIGRATIONS: "true"
      SKIP_SEED: "true"
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
      - ./apps/backend/logs:/app/logs
      - ./apps/backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dibea-dev-network
    command: npm run dev

  # Frontend Web App (Development)
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    container_name: dibea-frontend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NEXT_PUBLIC_APP_URL: http://localhost:3001
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - dibea-dev-network
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  dibea-dev-network:
    driver: bridge
