{
  "name": "DIBEA Agent Router - External",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dibea-agent",
        "responseMode": "responseNode"
      },
      "id": "webhook-input",
      "name": "Webhook Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        100,
        300
      ],
      "webhookId": "dibea-agent-router-containerized"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ (() => {\n  const userInput = $json.body.userInput || '';\n  const text = userInput.toLowerCase();\n  \n  // Determine confidence and route\n  let agent = 'GENERAL_AGENT';\n  let confidence = 0.7;\n  let endpoint = 'general-agent';\n  \n  if (text.includes('quantos') && (text.includes('bicho') || text.includes('animal') || text.includes('adoção'))) {\n    agent = 'GENERAL_AGENT';\n    confidence = 0.9;\n    endpoint = 'general-agent';\n  } else if (text.includes('cadastrar') || text.includes('registrar') || text.includes('novo')) {\n    agent = 'ANIMAL_AGENT';\n    confidence = 0.95;\n    endpoint = 'animal-agent';\n  } else if (text.includes('vacin') || text.includes('procedimento')) {\n    agent = 'PROCEDURE_AGENT';\n    confidence = 0.9;\n    endpoint = 'procedure-agent';\n  }\n  \n  // Use internal container network\n  return `http://n8n-moveup-u53084.vm.elestio.app/webhook/${endpoint}`;\n})() }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userInput",
              "value": "={{ $json.body.userInput }}"
            },
            {
              "name": "context",
              "value": "={{ $json.body.context || {} }}"
            },
            {
              "name": "sessionId",
              "value": "={{ $json.body.sessionId || 'session_' + Date.now() }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "route-to-agent",
      "name": "Route to Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        300,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        500,
        300
      ]
    }
  ],
  "connections": {
    "Webhook Input": {
      "main": [
        [
          {
            "node": "Route to Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route to Agent": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "containerized-v1"
}