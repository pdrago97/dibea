{
  "name": "DIBEA General Agent - External",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "general-agent",
        "responseMode": "responseNode"
      },
      "id": "webhook-input",
      "name": "Webhook Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        100,
        300
      ],
      "webhookId": "general-agent-containerized"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT COUNT(*) as total_animals, \n       COUNT(CASE WHEN status = 'DISPONIVEL' THEN 1 END) as available_animals,\n       COUNT(CASE WHEN status = 'ADOTADO' THEN 1 END) as adopted_animals\nFROM animals;",
        "options": {}
      },
      "id": "query-animals-stats",
      "name": "Query Animals Stats",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        300,
        300
      ],
      "credentials": {
        "postgres": {
          "id": "dibea-postgres-containerized",
          "name": "DIBEA PostgreSQL External"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, name, species, breed, age, description, status, created_at\nFROM animals \nWHERE status = 'DISPONIVEL'\nORDER BY created_at DESC\nLIMIT 5;",
        "options": {}
      },
      "id": "query-available-animals",
      "name": "Query Available Animals",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        300,
        400
      ],
      "credentials": {
        "postgres": {
          "id": "dibea-postgres-containerized",
          "name": "DIBEA PostgreSQL External"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ (() => {\n  const userInput = $('Webhook Input').first().json.body.userInput || '';\n  const stats = $('Query Animals Stats').first().json;\n  const animals = $('Query Available Animals').all().map(item => item.json);\n  \n  const availableCount = stats.available_animals || 0;\n  const totalCount = stats.total_animals || 0;\n  const adoptedCount = stats.adopted_animals || 0;\n  \n  return {\n    success: true,\n    agent: 'GENERAL_AGENT',\n    action: 'statistics_retrieved',\n    message: `Temos ${availableCount} animais dispon√≠veis para ado√ß√£o no sistema DIBEA! Total de ${totalCount} animais cadastrados, sendo ${adoptedCount} j√° adotados.`,\n    data: {\n      statistics: {\n        total: totalCount,\n        available: availableCount,\n        adopted: adoptedCount,\n        adoption_rate: totalCount > 0 ? ((adoptedCount / totalCount) * 100).toFixed(1) + '%' : '0%'\n      },\n      recent_animals: animals,\n      query: userInput\n    },\n    timestamp: new Date().toISOString(),\n    actions: [\n      { label: 'üêï Ver todos os animais', action: 'list_all_animals', url: '/animals' },\n      { label: '‚ù§Ô∏è Iniciar processo de ado√ß√£o', action: 'start_adoption', url: '/adoption/start' },\n      { label: 'üìä Ver relat√≥rios detalhados', action: 'view_reports', url: '/reports' },\n      { label: '‚ûï Cadastrar novo animal', action: 'register_animal', url: '/animals/new' }\n    ]\n  };\n})() }}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        500,
        350
      ]
    }
  ],
  "connections": {
    "Webhook Input": {
      "main": [
        [
          {
            "node": "Query Animals Stats",
            "type": "main",
            "index": 0
          },
          {
            "node": "Query Available Animals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Animals Stats": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Available Animals": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "containerized-v1"
}