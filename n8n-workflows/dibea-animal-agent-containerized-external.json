{
  "name": "DIBEA Animal Agent - External",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "animal-agent",
        "responseMode": "responseNode"
      },
      "id": "webhook-input",
      "name": "Webhook Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        100,
        300
      ],
      "webhookId": "animal-agent-containerized"
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": "public",
        "table": "animals",
        "columns": "name, species, breed, sex, age, description, status, municipality_id",
        "additionalFields": {
          "mode": "defineBelow",
          "values": {
            "name": "={{ $json.body.userInput.match(/(?:c√£o|cachorro|gato|animal)\\s+(?:chamado|de nome)?\\s+([A-Za-z]+)/i)?.[1] || 'Animal Sem Nome' }}",
            "species": "={{ $json.body.userInput.toLowerCase().includes('gato') ? 'FELINO' : 'CANINO' }}",
            "breed": "SRD",
            "sex": "MACHO",
            "age": 2,
            "description": "Animal cadastrado via agente inteligente",
            "status": "DISPONIVEL",
            "municipality_id": "{{ $json.body.context?.municipalityId || '00000000-0000-0000-0000-000000000001' }}"
          }
        }
      },
      "id": "insert-animal",
      "name": "Insert Animal",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        300,
        300
      ],
      "credentials": {
        "postgres": {
          "id": "dibea-postgres-containerized",
          "name": "DIBEA PostgreSQL External"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, name, species, breed, sex, age, description, status, created_at\nFROM animals \nWHERE id = '{{ $json.id }}';",
        "options": {}
      },
      "id": "get-created-animal",
      "name": "Get Created Animal",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        500,
        300
      ],
      "credentials": {
        "postgres": {
          "id": "dibea-postgres-containerized",
          "name": "DIBEA PostgreSQL External"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ (() => {\n  const userInput = $('Webhook Input').first().json.body.userInput || '';\n  const insertResult = $('Insert Animal').first().json;\n  const animalData = $('Get Created Animal').first().json;\n  \n  const animalName = animalData?.name || 'Animal';\n  const animalId = animalData?.id || insertResult?.id;\n  \n  return {\n    success: true,\n    agent: 'ANIMAL_AGENT',\n    action: 'animal_registered',\n    message: `üêï ${animalName} foi cadastrado com sucesso no sistema DIBEA! O animal est√° agora dispon√≠vel para ado√ß√£o.`,\n    data: {\n      animal: animalData,\n      animal_id: animalId,\n      registration_date: new Date().toISOString(),\n      query: userInput\n    },\n    timestamp: new Date().toISOString(),\n    actions: [\n      { label: 'üëÅÔ∏è Ver detalhes do animal', action: 'view_animal', url: `/animals/${animalId}` },\n      { label: 'üìù Editar informa√ß√µes', action: 'edit_animal', url: `/animals/${animalId}/edit` },\n      { label: 'üì∑ Adicionar fotos', action: 'add_photos', url: `/animals/${animalId}/photos` },\n      { label: 'üíâ Registrar procedimento', action: 'add_procedure', url: `/procedures/new?animalId=${animalId}` },\n      { label: '‚ûï Cadastrar outro animal', action: 'register_another', url: '/animals/new' }\n    ]\n  };\n})() }}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        700,
        300
      ]
    }
  ],
  "connections": {
    "Webhook Input": {
      "main": [
        [
          {
            "node": "Insert Animal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Animal": {
      "main": [
        [
          {
            "node": "Get Created Animal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Created Animal": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "containerized-v1"
}