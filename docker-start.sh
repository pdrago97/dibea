#!/bin/bash

# DIBEA - Docker Startup Script
# Este script inicia todos os servi√ßos do DIBEA usando Docker Compose

set -e

echo "üöÄ Iniciando DIBEA - Sistema de Gest√£o de Bem-Estar Animal"
echo "=================================================="

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker primeiro."
    exit 1
fi

# Verificar se Docker Compose est√° dispon√≠vel
if ! command -v docker-compose > /dev/null 2>&1; then
    echo "‚ùå Docker Compose n√£o encontrado. Por favor, instale o Docker Compose."
    exit 1
fi

echo "‚úÖ Docker est√° rodando"
echo "‚úÖ Docker Compose encontrado"

# Parar containers existentes se estiverem rodando
echo ""
echo "üõë Parando containers existentes..."
docker-compose down --remove-orphans

# Limpar volumes se solicitado
if [ "$1" = "--clean" ]; then
    echo "üßπ Limpando volumes existentes..."
    docker-compose down -v
    docker system prune -f
fi

# Construir e iniciar todos os servi√ßos
echo ""
echo "üî® Construindo e iniciando servi√ßos..."
docker-compose up --build -d

# Aguardar servi√ßos ficarem prontos
echo ""
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."

# Fun√ß√£o para verificar se um servi√ßo est√° saud√°vel
check_health() {
    local service=$1
    local max_attempts=30
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if docker-compose ps $service | grep -q "healthy"; then
            echo "‚úÖ $service est√° pronto"
            return 0
        fi
        echo "‚è≥ Aguardando $service... (tentativa $attempt/$max_attempts)"
        sleep 10
        attempt=$((attempt + 1))
    done
    
    echo "‚ùå $service n√£o ficou pronto em tempo h√°bil"
    return 1
}

# Verificar sa√∫de dos servi√ßos principais
check_health "postgres"
check_health "redis"
check_health "neo4j"
check_health "elasticsearch"

# Aguardar um pouco mais para o backend e frontend
sleep 20

echo ""
echo "üéâ DIBEA est√° rodando!"
echo "=================================================="
echo ""
echo "üìä Servi√ßos dispon√≠veis:"
echo "‚Ä¢ Frontend:        http://localhost:3001"
echo "‚Ä¢ Backend API:     http://localhost:3000"
echo "‚Ä¢ PostgreSQL:      localhost:5432"
echo "‚Ä¢ Redis:           localhost:6379"
echo "‚Ä¢ Neo4j Browser:   http://localhost:7474"
echo "‚Ä¢ Elasticsearch:   http://localhost:9200"
echo "‚Ä¢ MinIO Console:   http://localhost:9001"
echo "‚Ä¢ n8n:             http://localhost:5678"
echo ""
echo "üîê Credenciais:"
echo "‚Ä¢ Neo4j:           neo4j / dibea123"
echo "‚Ä¢ MinIO:           dibea_minio / dibea_minio_password"
echo "‚Ä¢ n8n:             admin / dibea123"
echo ""
echo "üìù Para ver logs: docker-compose logs -f [service_name]"
echo "üõë Para parar:    docker-compose down"
echo "üßπ Para limpar:   ./docker-start.sh --clean"
echo ""
echo "‚ú® Acesse http://localhost:3001 para come√ßar!"
