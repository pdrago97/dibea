services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: dibea-postgres
    environment:
      POSTGRES_DB: dibea
      POSTGRES_USER: dibea_user
      POSTGRES_PASSWORD: dibea_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - dibea-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dibea_user -d dibea"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    container_name: dibea-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dibea-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO (S3 Compatible Storage)
  minio:
    image: minio/minio:latest
    container_name: dibea-minio
    environment:
      MINIO_ROOT_USER: dibea_minio
      MINIO_ROOT_PASSWORD: dibea_minio_password
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - dibea-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j (Knowledge Graph)
  neo4j:
    image: neo4j:5.15-community
    container_name: dibea-neo4j
    environment:
      NEO4J_AUTH: neo4j/dibea123
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,gds.*
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - dibea-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Elasticsearch (Search Engine)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: dibea-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - dibea-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n (Workflow Automation)
  n8n:
    image: n8nio/n8n:latest
    container_name: dibea-n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=dibea123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Sao_Paulo
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    networks:
      - dibea-network
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: dibea-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://dibea_user:dibea_password@postgres:5432/dibea
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dibea_jwt_secret_key_2024
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=dibea_minio
      - MINIO_SECRET_KEY=dibea_minio_password
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=dibea123
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - N8N_WEBHOOK_URL=http://n8n:5678
    ports:
      - "3000:3000"
    networks:
      - dibea-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./apps/backend/logs:/app/logs

  # Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: dibea-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api/v1
    ports:
      - "3001:3001"
    networks:
      - dibea-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  minio_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  elasticsearch_data:
  n8n_data:

networks:
  dibea-network:
    driver: bridge
