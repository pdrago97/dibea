{
  "$schema": "https://opencode.ai/config.json",
  "mcp": {
    "filesystem": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-filesystem", "/Users/pedroreichow/projects/dibea"],
      "enabled": true,
      "environment": {}
    },
    "github": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-github"],
      "enabled": true,
      "environment": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
      }
    },
    "supabase": {
      "type": "remote",
      "url": "https://mcp.supabase.com/mcp",
      "enabled": true,
      "description": "Remote Supabase MCP server with OAuth2 authentication",
      "features": [
        "account",
        "docs",
        "database",
        "debugging",
        "development",
        "functions",
        "storage"
      ],
      "headers": {
        "Content-Type": "application/json"
      }
    },
    "git": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-git"],
      "enabled": true,
      "environment": {}
    },
    "brave-search": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-brave-search"],
      "enabled": true,
      "environment": {
        "BRAVE_API_KEY": "${BRAVE_API_KEY}"
      }
    },
    "fetch": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-fetch"],
      "enabled": true,
      "environment": {}
    },
    "memory": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-memory"],
      "enabled": true,
      "environment": {}
    },
    "n8n": {
      "type": "remote",
      "url": "https://n8n-moveup-u53084.vm.elestio.app/webhook/mcp",
      "enabled": false,
      "headers": {
        "Authorization": "Bearer ${N8N_API_KEY}",
        "Content-Type": "application/json"
      }
    }
  },
  "tools": {
    "filesystem*": true,
    "github*": true,
    "supabase*": true,
    "git*": true,
    "brave-search*": false,
    "fetch*": true,
    "memory*": true,
    "n8n*": false
  },
  "agents": {
    "dibea-fullstack": {
      "description": "Full-stack development agent for DIBEA project",
      "tools": {
        "filesystem*": true,
        "github*": true,
        "supabase*": true,
        "git*": true,
        "fetch*": true,
        "memory*": true
      },
      "rules": [
        "Follow DIBEA coding standards from .augment/rules/AGENTS.md",
        "Use TypeScript strict mode",
        "Prefer functional components with hooks",
        "Use Tailwind CSS with cn() utility",
        "Always validate with Zod",
        "Use Prisma for database queries"
      ]
    },
    "dibea-frontend": {
      "description": "Frontend-focused agent for Next.js development",
      "tools": {
        "filesystem*": true,
        "github*": true,
        "git*": true,
        "fetch*": true
      },
      "rules": [
        "Next.js 14 App Router patterns",
        "React Server Components when possible",
        "Shadcn UI components",
        "Tailwind CSS styling",
        "TypeScript strict mode"
      ]
    },
    "dibea-backend": {
      "description": "Backend-focused agent for API and database",
      "tools": {
        "filesystem*": true,
        "github*": true,
        "supabase*": true,
        "git*": true
      },
      "rules": [
        "Express.js REST API patterns",
        "Prisma ORM for database",
        "JWT authentication",
        "Winston logging",
        "Zod validation"
      ]
    },
    "dibea-n8n": {
      "description": "N8N workflow and automation agent",
      "tools": {
        "filesystem*": true,
        "n8n*": true,
        "fetch*": true,
        "memory*": true
      },
      "rules": [
        "Follow N8N best practices",
        "Use OpenAI for LLM agents",
        "Integrate with Supabase Edge Functions",
        "Handle WhatsApp webhooks"
      ]
    },
    "dibea-docs": {
      "description": "Documentation and analysis agent",
      "tools": {
        "filesystem*": true,
        "github*": true,
        "git*": true,
        "fetch*": true,
        "memory*": true
      },
      "rules": [
        "Write clear, concise documentation",
        "Use Markdown format",
        "Include code examples",
        "Keep docs up-to-date with code"
      ]
    }
  },
  "models": {
    "default": "gpt-4-turbo-preview",
    "fast": "gpt-3.5-turbo",
    "smart": "gpt-4-turbo-preview"
  },
  "rules": [
    "Always read .augment/rules/AGENTS.md before starting work",
    "Follow the MVP-first approach",
    "Prioritize code simplicity and maintainability",
    "Use existing services and components when possible",
    "Write tests for new features",
    "Update documentation when making changes"
  ],
  "theme": "dark",
  "formatters": {
    "typescript": "prettier",
    "javascript": "prettier",
    "json": "prettier",
    "markdown": "prettier"
  }
}

